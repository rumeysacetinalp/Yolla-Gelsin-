@model Tuple<List<StokYönetimi.Models.Product>, List<StokYönetimi.Models.ShoppingCart>>


@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
    var categories = new List<string> { "Elektronik", "Giyim", "Kozmetik", "Ev ve Yaşam", "Kitap", "Ofis Ürünleri", "Spor", "Oyuncak", "Otomotiv" };
}


@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}


<style>

    /* Kategori Butonları */
    .category-button {
        display: flex;
        align-items: center;
        gap: 5px;
        font-size: 1rem;
        font-weight: bold;
        color: #333;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 8px 15px;
        text-decoration: none;
        background-color: #ffffff;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .category-button:hover {
            color: #f57c00;
            border-color: #f57c00;
        }

        .category-button.active {
            background-color: #f57c00;
            color: #ffffff;
            border-color: #f57c00;
        }

        .category-button i {
            font-size: 1.2rem;
        }

  
    .d-flex.gap-3 {
        gap: 15px; 
    }



    .card {
        border-radius: 10px;
        overflow: hidden;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px rgba(0, 0, 0, 0.2);
        }

    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
    }

    .btn-warning {
        background-color: #f57c00;
        border: none;
    }

        .btn-warning:hover {
            background-color: #e65100;
        }

    .quantity-control {
        display: flex;
        align-items: center;
        gap: 5px;
    }

        .quantity-control button {
            width: 35px;
            height: 35px;
            font-size: 14px;
            font-weight: bold;
        }

        .quantity-control input {
            width: 50px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 5px;
            height: 35px;
        }

    .add-to-cart {
        background-color: #f57c00;
        color: white;
        border: none;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .add-to-cart:hover {
            background-color: #e65100;
        }

</style>



<div class="container mt-4">
    <!-- Kategori Menü -->
    <div class="d-flex justify-content-center mb-4 gap-3">
        <a href="/UserDashboard/Dashboard?category=Elektronik"
           class="category-button @(ViewBag.SelectedCategory == "Elektronik" ? "active" : "")">
            <i class="bi bi-tv"></i> Elektronik
        </a>
        <a href="/UserDashboard/Dashboard?category=Giyim"
           class="category-button @(ViewBag.SelectedCategory == "Giyim" ? "active" : "")">
            <i class="bi bi-person-lines-fill"></i> Giyim
        </a>
        <a href="/UserDashboard/Dashboard?category=Kozmetik"
           class="category-button @(ViewBag.SelectedCategory == "Kozmetik" ? "active" : "")">
            <i class="bi bi-heart"></i> Kozmetik
        </a>
        <a href="/UserDashboard/Dashboard?category=Ev ve Yaşam"
           class="category-button @(ViewBag.SelectedCategory == "Ev ve Yaşam" ? "active" : "")">
            <i class="bi bi-house"></i> Ev ve Yaşam
        </a>
        <a href="/UserDashboard/Dashboard?category=Kitap"
           class="category-button @(ViewBag.SelectedCategory == "Kitap" ? "active" : "")">
            <i class="bi bi-book"></i> Kitap
        </a>
        <a href="/UserDashboard/Dashboard?category=Ofis Ürünleri"
           class="category-button @(ViewBag.SelectedCategory == "Ofis Ürünleri" ? "active" : "")">
            <i class="bi bi-briefcase"></i> Ofis Ürünleri
        </a>
        <a href="/UserDashboard/Dashboard?category=Spor"
           class="category-button @(ViewBag.SelectedCategory == "Spor" ? "active" : "")">
            <i class="bi bi-bicycle"></i> Spor
        </a>
        <a href="/UserDashboard/Dashboard?category=Oyuncak"
           class="category-button @(ViewBag.SelectedCategory == "Oyuncak" ? "active" : "")">
            <i class="bi bi-controller"></i> Oyuncak
        </a>
        <a href="/UserDashboard/Dashboard?category=Otomotiv"
           class="category-button @(ViewBag.SelectedCategory == "Otomotiv" ? "active" : "")">
            <i class="bi bi-car-front"></i> Otomotiv
        </a>
    </div>


    <!-- Ürün Kartları -->
    <h2 class="text-center mb-4">Ürünler</h2>
    <div class="row">
        @foreach (var product in Model.Item1) // Product listesi için Item1
        {

            if (((List<int>)ViewBag.LockedProductIds).Contains(product.ProductID))
            {
                continue; // Kilitli ürünleri atla
            }



            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <img src="@product.ProductImage" class="card-img-top" alt="@product.ProductName" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">@product.ProductName</h5>
                        <p class="card-text text-muted">
                            <i class="bi bi-tags-fill me-1"></i> Kategori: @product.Category
                        </p>
                        <p class="card-text text-success fw-bold">@product.Price?.ToString("C") </p>

                        <div class="d-flex align-items-center justify-content-between mb-3">
                            <div class="quantity-control d-flex align-items-center">
                                <button class="btn btn-outline-secondary decrease" data-id="@product.ProductID">-</button>
                                <input type="number" class="form-control text-center quantity-input mx-2" value="1" min="1" data-id="@product.ProductID" style="width: 50px;">
                                <button class="btn btn-outline-secondary increase" data-id="@product.ProductID">+</button>
                            </div>
                            <button class="btn btn-warning add-to-cart d-flex align-items-center" data-id="@product.ProductID" data-name="@product.ProductName" style="padding: 5px 15px; font-size: 0.9rem;">
                                <i class="bi bi-cart-fill me-2"></i> Sepete Ekle
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>


<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Azaltma Butonları
        document.querySelectorAll('.decrease').forEach(button => {
            button.addEventListener('click', function () {
                const input = this.nextElementSibling; // Input elemanını bul
                const value = parseInt(input.value) || 1; // Mevcut değeri al
                if (value > 1) {
                    input.value = value - 1; // Azalt
                }
            });
        });

        // Artırma Butonları
        document.querySelectorAll('.increase').forEach(button => {
            button.addEventListener('click', function () {
                const input = this.previousElementSibling; // Input elemanını bul
                const value = parseInt(input.value) || 1; // Mevcut değeri al
                input.value = value + 1; // Artır
            });
        });

        // Sepete Ekleme İşlemi
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id'); // Ürün ID'sini al
                const productName = this.getAttribute('data-name'); // Ürün adını al
                const quantityInput = document.querySelector(`.quantity-input[data-id='${productId}']`); // İlgili input elemanını bul
                const quantity = parseInt(quantityInput.value) || 1; // Miktarı al

                // API çağrısı yap
                fetch('/UserDashboard/AddToCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId, quantity }),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            alert(`Ürün sepete eklendi! Ürün Adı: ${productName}, Adet: ${quantity}`);
                        } else {
                            alert(`Hata: ${data.message}`);
                        }
                    })
                    .catch(error => console.error('Hata:', error));
            });
        });
    });



</script>