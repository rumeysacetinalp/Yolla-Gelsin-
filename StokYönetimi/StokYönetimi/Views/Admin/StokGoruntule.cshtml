@model IEnumerable<StokYönetimi.Models.Product>

@{
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ürün Stok Durumu Paneli</title>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
   
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <style>
        body {
            background-color: #f8f9fa;
        }

        h2 {
            color: #343a40;
            margin-top: 20px;
            text-align: center;
            font-weight: bold;
        }

        .table-container {
            margin-top: 30px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            overflow: hidden;
            background: white;
        }

        .chart-container {
            margin-top: 30px;
        }

        /* Stok Seviyesi Uyarı Renkleri */
        .low-stock {
            background-color: #f8d7da !important;
        }

        .normal-stock {
            background-color: #d4edda !important;
        }

        /* Animasyon */
        .fade-in {
            animation: fadeIn 1.5s ease-in-out;
        }



    </style>

    <style>
        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in {
            animation: fadeIn 1.5s ease-in-out;
        }
    </style>


</head>
<body>
    <div class="container">
        <h2 class="fade-in">Ürün Stok Durumu Paneli</h2>

        <!-- Ürün Tablosu -->
        <div class="table-container fade-in">
            <table class="table table-hover text-center">
                <thead class="table-dark">
                    <tr>
                        <th>Ürün Adı</th>
                        <th>Stok Miktarı</th>
                        <th>Fiyat (₺)</th>
                    </tr>
                </thead>
<tbody>
    @foreach (var product in Model)
    {
        <tr class="@(product.Stock < 10 ? "low-stock" : "normal-stock")">
            <td>@product.ProductName</td>
            <td>@product.Stock</td>
           <td>@($"{product.Price:C}")</td>

        </tr>
    }
</tbody>

            </table>
        </div>

        <!-- Grafik Alanı -->
        <div class="row chart-container fade-in">
            <!-- Bar Grafiği -->
            <div class="col-md-6">
                <canvas id="barChart"></canvas>
            </div>
            <!-- Dairesel Grafik -->
            <div class="col-md-6">
                <canvas id="pieChart"></canvas>
            </div>
        </div>


        <!-- Kategori Bazlı Stok Tablosu -->
        <div class="row mt-5 fade-in">
            <h4 class="text-center mb-3">Kategori Bazlı Stok Durumu</h4>
            <div class="col-md-12">
                <table class="table table-bordered text-center">
                    <thead class="table-primary">
                        <tr>
                            <th>Kategori</th>
                            <th>Toplam Stok Miktarı</th>
                            <th>Ürün Sayısı</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var categoryGroups = Model.GroupBy(p => p.Category)
                            .Select(g => new
                            {
                                Category = g.Key,
                                TotalStock = g.Sum(p => p.Stock),
                                ProductCount = g.Count()
                            });
                        }
                        @foreach (var group in categoryGroups)
                        {
                            <tr>
                                <td>@group.Category</td>
                                <td>@group.TotalStock</td>
                                <td>@group.ProductCount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // Grafik için veri çekme (Razor ile doldurulacak)
        const productNames = @Html.Raw(Json.Serialize(Model.Select(p => p.ProductName)));
        const productStocks = @Html.Raw(Json.Serialize(Model.Select(p => p.Stock)));

        // Bar Grafiği
        const barCtx = document.getElementById('barChart').getContext('2d');
        new Chart(barCtx, {
            type: 'bar',
            data: {
                labels: productNames,
                datasets: [{
                    label: 'Stok Miktarı',
                    data: productStocks,
                    backgroundColor: productStocks.map(stock => stock < 10 ? '#e74c3c' : '#2ecc71'),
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        display: true,
                        position: 'top'
                    }
                }
            }
        });

        // Dairesel Grafik
        const pieCtx = document.getElementById('pieChart').getContext('2d');
        new Chart(pieCtx, {
            type: 'doughnut',
            data: {
                labels: productNames,
                datasets: [{
                    label: 'Stok Durumu',
                    data: productStocks,
                    backgroundColor: productStocks.map(stock => stock < 10 ? '#e74c3c' : '#2ecc71'),
                    hoverOffset: 4
                }]
            },
            options: {
                plugins: {
                    legend: { position: 'top' }
                }
            }
        });
    </script>
</body>
</html>
